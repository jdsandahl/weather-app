{"version":3,"sources":["components/location-details.jsx","components/forecast-summary.jsx","components/forecast-list.jsx","components/forecast-details.jsx","components/search-form.jsx","components/app.js","index.js"],"names":["LocationDetails","city","country","className","ForecastSummary","date","icon","temperature","description","onSelect","data-testid","moment","format","name","iconId","onClick","ForecastList","props","forecasts","map","max","key","onForecastSelect","ForecastDetails","min","humidity","wind","speed","direction","SearchForm","useState","searchText","setSearchText","type","value","onChange","event","target","onCitySearch","App","selectedDate","setSelectedDate","setForecasts","location","setLocation","loading","setLoading","error","setError","useEffect","Axios","get","then","response","data","handleCitySearch","request","toLowerCase","catch","err","message","selectedForecast","find","forecast","render","document","getElementById"],"mappings":"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","file":"static/js/main.d28f9a4e.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst LocationDetails = ({city, country}) => (\n  <h1 className=\"location-details\">{`${city}, ${country}`}</h1>\n);\n\nLocationDetails.propTypes = {\n  city: PropTypes.string.isRequired,\n  country: PropTypes.string.isRequired,\n};\n\nexport default LocationDetails;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport WeatherIcon from 'react-icons-weather';\nimport moment from 'moment';\n\nconst ForecastSummary = ({ date, icon, temperature, description, onSelect }) => (\n  <div className=\"forecast-summary\">\n    <div className=\"date\" data-testid=\"date-id\">\n      <span>{moment(date).format('ddd Do MMM')}</span>\n    </div>\n    <div className=\"icon\" data-testid=\"icon-id\">\n      <WeatherIcon name=\"owm\" iconId={icon} />\n    </div>\n    <div className=\"temperature\" data-testid=\"temperature-id\">\n      <span>{temperature}&deg;c</span>\n    </div>\n    <div className=\"description\" data-testid=\"description-id\">\n      <span>{description}</span>\n    </div>\n    <button onClick={() => onSelect(date)}>More Details</button>\n  </div>\n);\n\n\nForecastSummary.propTypes = {\n  forecasts: PropTypes.shape({\n    date: PropTypes.number.isRequired,\n    temperature: PropTypes.object.isRequired,\n    description: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ForecastSummary;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ForecastSummary from \"./forecast-summary\";\n\nimport \"../styles/forecast-list.css\";\n\nconst ForecastList = (props) => (\n  <div className=\"forecast-list\">\n    {props.forecasts.map(\n      ({ date, description, icon, temperature: { max } }) => (\n        <ForecastSummary\n          key={date}\n          date={date}\n          description={description}\n          icon={icon}\n          temperature={max}\n          onSelect={props.onForecastSelect}\n        />\n      )\n    )}\n  </div>\n);\n\nForecastList.propTypes = {\n  forecasts: PropTypes.array.isRequired,\n};\n\nexport default ForecastList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from 'moment';\n\nimport '../styles/forecast-details.css';\n\nconst ForecastDetails = (props) => (\n  <div className=\"forecast-details\">\n    <div className=\"date\">\n      <h3>{moment(props.forecasts.date).format('ddd Do MMM y')}</h3>\n    </div>\n    <div className=\"max-temperature\">\n      <span>Max Temperature: {props.forecasts.temperature.max}&deg;c</span>\n    </div>\n    <div className=\"min-temperature\">\n      <span>Min Temperature: {props.forecasts.temperature.min}&deg;c</span>\n    </div>\n    <div className=\"humidity\">\n      <span>Humidity: {props.forecasts.humidity}%</span>\n    </div>\n    <div className=\"wind-speed\">\n      <span>Wind: {props.forecasts.wind.speed}mph {props.forecasts.wind.direction}</span>\n    </div>\n  </div>\n);\n\nForecastDetails.propTypes = {\n  forecasts: PropTypes.shape({\n    date: PropTypes.number.isRequired,\n    temperature: PropTypes.object.isRequired,\n    humidity: PropTypes.number.isRequired,\n    wind: PropTypes.object.isRequired,\n  }),\n};\n\nexport default ForecastDetails;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"../styles/search-form.css\";\n\nconst SearchForm = (props) => {\n  const [searchText, setSearchText] = useState(\"\");\n\n  const handleInputChange = (event) => {\n    setSearchText(event.target.value);\n  };\n\n  return (\n    <div className=\"search-form\">\n      <div className=\"search-instruction\">\n        <p className=\"\">Check a different city:</p>\n      </div>\n      <input\n        type=\"text\"\n        value={searchText}\n        onChange={handleInputChange}\n      />\n      <button type=\"submit\" onClick={() => props.onCitySearch(searchText)}>\n        Search\n      </button>\n    </div>\n  );\n};\n\nSearchForm.propTypes = {\n  onCitySearch: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport LocationDetails from \"./location-details\";\nimport ForecastList from \"./forecast-list\";\n\nimport \"../styles/app.css\";\nimport ForecastDetails from \"./forecast-details\";\nimport SearchForm from \"./search-form\";\n\nconst App = (props) => {\n  const [selectedDate, setSelectedDate] = useState(0);\n  const [forecasts, setForecasts] = useState([]);\n  const [location, setLocation] = useState({ city: \"\", country: \"\" });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    Axios.get(\"https://mcr-codes-weather.herokuapp.com/forecast\").then(\n      (response) => {\n        setForecasts(response.data.forecasts);\n        setLocation(response.data.location);\n        setLoading(false);\n      }\n    );\n  }, []);\n\n  const handleCitySearch = (city) => {\n    const request = city.toLowerCase();\n\n    setLoading(true);\n    setError(null);\n\n    Axios.get(\n      `https://mcr-codes-weather.herokuapp.com/forecast?city=${request}`\n    )\n      .then((response) => {\n        setForecasts(response.data.forecasts);\n        setLocation(response.data.location);\n        setLoading(false);\n      })\n      .catch((err) => {\n        if (err.response) {\n          setLoading(false);\n          setError(`${err.message}: The city entered was not found`);\n        } else {\n          setLoading(false);\n          setError(err.message);\n        }\n      });\n  };\n\n  const selectedForecast = forecasts.find(\n    (forecast) => forecast.date === selectedDate\n  );\n\n  const handleForecastSelect = (date) => {\n    setSelectedDate(date);\n  };\n\n  if (loading && !error) {\n    return (\n      <div className=\"forecast\">\n        <h1 className=\"appLoading\">Loading the weather...</h1>\n      </div>\n    );\n  }\n  return (\n    <div className=\"forecast\">\n      {error && (\n        <div>\n          <h2 className=\"error-message\">{error}</h2>\n          <SearchForm onCitySearch={handleCitySearch} />\n        </div>\n      )}\n\n      {!loading && !error && (\n        <div>\n          <LocationDetails city={location.city} country={location.country} />\n\n          <SearchForm onCitySearch={handleCitySearch} />\n\n          <ForecastList\n            forecasts={forecasts}\n            onForecastSelect={handleForecastSelect}\n          />\n\n          {selectedForecast && <ForecastDetails forecasts={selectedForecast} />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./components/app\";\n\nrender(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}